[preface]
Preface
-------
So you want to write great tests? Ah, so do I! :) I have some experience in writing tests, and I would like to share it with you.

Stay focused, stay sharp, distill what you read through your own experiences, and choose what seems right and valuable for you.

[float]
==== The Idea
The idea behind this book is to present test code snippets and discuss ways of making them better. 

All examples discussed in this book come from real code of real applications. I haven't made them up. They are real. From thousands of tests I have seen I have selected these which illustrate some typical errors or imperfections which I frequently encounter while doing code reviews (or pondering over my own code!).

Some of the code examples were obfuscated in order to '"protect the innocents"'. ;) Many were significantly truncated, so only their '"essence"' was left, and all the cluttering was removed. This makes the examples easier to understand but at the same time it makes some of the discussed issues look not so important. However they *are* important in real life scenarios, where you have to deal with numerous much more complex tests (or the same issues were repeated in numerous tests). 

Even though the title of this book mentions '"bad tests"' in fact only few of the tests presented here are really bad. The most of them is rather imperfect. However for the sake of marketing impact I decided to go with '"bad tests"' on the cover. :)

[float]
==== SUT and Assertions
From time to time I use term 'SUT' which denotes 'System Under Test', that is *the thing* being tested. The SUT can vary in size. For unit tests it is usually a class, for integration tests it might be a class, a layer or a module, and for end-to-end tests it is the whole system.

Throughout the book I often use FEST Fluent Assertions{empty}pass:[]footnote:[https://github.com/alexruiz/fest-assert-2.x/wiki] (e.g. +assertThat(...)+) instead of those provided by JUnit or TestNG (e.g. +assertEquals(...)+). After writing thousands of tests (of each kind) I can say they are simply better.

// TODO about +setUp()+ what I mean by this - do I really write about setUp methods?

[float]
==== Icons
The following icons appear within the text:

TIP: A helpful tip.

NOTE: An additional note.

WARNING: Warning, danger ahead!

All three icons were designed by http://www.webdesignerdepot.com/[Webdesigner Depot].

[float]
=== What I Expect From You
To really benefit from reading this book you should:

* have some experience in writing tests, especially unit tests,
* know a testing framework; preferably TestNG, but any other will also be fine (but you have to scan TestNG documentation to understand some code samples),
* be interested in improving your tests-writing skills,
* understand the value of clean test code.

TIP: You could gain some of the required knowledge by reading my other books (visit http://practicalunittesting.com).

[float]
==== Book Site
Please visit the TODO http://practicalunittesting.com[official book site] for news and information on downloadable extras etc.

[float]
==== Contributors
Thanks to Bartosz Ocytko, Martin, Bartek Zdanowski, Jakub Nabrdalik TODO who else?, 
